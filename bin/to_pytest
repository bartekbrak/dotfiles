#!/usr/bin/env python
import sys


def get_input():
    if not sys.stdin.isatty():
        return sys.stdin.read()
    if len(sys.argv) == 2:
        return sys.argv[1]
    raise RuntimeError('bad args')


def do(s):
    if '::' in s:
        return s
    if s.endswith('.py'):
        return s
    parts = s.split('.')
    filename_parts = [_ for _ in parts if _[0].islower()]
    upper = [_ for _ in parts if _[0].isupper()]
    if not upper:
        return f"{'/'.join(filename_parts)}"
    cls_name = upper[0]
    test_function = parts[-1]
    return f"{'/'.join(filename_parts[:-1])}.py::{cls_name}::{test_function}"


def test_one():
    out = do(
        'ff.mods.reporting.one_on_one_reports.tests.test_metrics'
        '.BadStateTestCase'
        '.test_people_filters_breakdown_on_no_snapshots'
    )
    expected = (
        'ff/mods/reporting/one_on_one_reports/tests/test_metrics.py'
        '::BadStateTestCase'
        '::test_people_filters_breakdown_on_no_snapshots'
    )
    assert out == expected


if __name__ == "__main__":
    # test_one()
    sys.stdout.write(do(get_input()))
